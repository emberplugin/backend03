//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IIS.MyTestApplicationEmber
{
    using System;
    using System.Xml;
    using ICSSoft.STORMNET;
    using ICSSoft.STORMNET.Business.Audit;
    using ICSSoft.STORMNET.Business.Audit.Objects;
    
    
    //  *** Start programmer edit section *** (Using statements)

    //  *** End programmer edit section *** (Using statements)


    /// <summary>
    /// Computer part.
    /// </summary>
    //  *** Start programmer edit section *** (ComputerPart CustomAttributes)

    //  *** End programmer edit section *** (ComputerPart CustomAttributes)
    [AutoAltered()]
    [Caption("Computer part")]
    [AccessType(ICSSoft.STORMNET.AccessType.none)]
    [View("AuditView", new string[] {
            "Broken as \'Broken\'",
            "SerialNumber as \'Serial number\'",
            "Type as \'Type\'",
            "Type.Name as \'Name\'"}, Hidden=new string[] {
            "Type.Name"})]
    [MasterViewDefineAttribute("AuditView", "Type", ICSSoft.STORMNET.LookupTypeEnum.Standard, "", "Name")]
    [View("ComputerPartE", new string[] {
            "Broken as \'Broken\'",
            "SerialNumber as \'Serial number\'",
            "Type as \'Type\'",
            "Type.Name as \'Name\'"}, Hidden=new string[] {
            "Type.Name"})]
    [MasterViewDefineAttribute("ComputerPartE", "Type", ICSSoft.STORMNET.LookupTypeEnum.Standard, "", "Name")]
    public class ComputerPart : ICSSoft.STORMNET.DataObject, IDataObjectWithAuditFields
    {
        
        private bool fBroken;
        
        private string fSerialNumber;
        
        private System.Nullable<System.DateTime> fCreateTime;
        
        private string fCreator;
        
        private System.Nullable<System.DateTime> fEditTime;
        
        private string fEditor;
        
        private IIS.MyTestApplicationEmber.Type fType;
        
        private IIS.MyTestApplicationEmber.Computer fComputer;
        
        //  *** Start programmer edit section *** (ComputerPart CustomMembers)

        //  *** End programmer edit section *** (ComputerPart CustomMembers)

        
        /// <summary>
        /// Broken.
        /// </summary>
        //  *** Start programmer edit section *** (ComputerPart.Broken CustomAttributes)

        //  *** End programmer edit section *** (ComputerPart.Broken CustomAttributes)
        public virtual bool Broken
        {
            get
            {
                //  *** Start programmer edit section *** (ComputerPart.Broken Get start)

                //  *** End programmer edit section *** (ComputerPart.Broken Get start)
                bool result = this.fBroken;
                //  *** Start programmer edit section *** (ComputerPart.Broken Get end)

                //  *** End programmer edit section *** (ComputerPart.Broken Get end)
                return result;
            }
            set
            {
                //  *** Start programmer edit section *** (ComputerPart.Broken Set start)

                //  *** End programmer edit section *** (ComputerPart.Broken Set start)
                this.fBroken = value;
                //  *** Start programmer edit section *** (ComputerPart.Broken Set end)

                //  *** End programmer edit section *** (ComputerPart.Broken Set end)
            }
        }
        
        /// <summary>
        /// SerialNumber.
        /// </summary>
        //  *** Start programmer edit section *** (ComputerPart.SerialNumber CustomAttributes)

        //  *** End programmer edit section *** (ComputerPart.SerialNumber CustomAttributes)
        [StrLen(255)]
        public virtual string SerialNumber
        {
            get
            {
                //  *** Start programmer edit section *** (ComputerPart.SerialNumber Get start)

                //  *** End programmer edit section *** (ComputerPart.SerialNumber Get start)
                string result = this.fSerialNumber;
                //  *** Start programmer edit section *** (ComputerPart.SerialNumber Get end)

                //  *** End programmer edit section *** (ComputerPart.SerialNumber Get end)
                return result;
            }
            set
            {
                //  *** Start programmer edit section *** (ComputerPart.SerialNumber Set start)

                //  *** End programmer edit section *** (ComputerPart.SerialNumber Set start)
                this.fSerialNumber = value;
                //  *** Start programmer edit section *** (ComputerPart.SerialNumber Set end)

                //  *** End programmer edit section *** (ComputerPart.SerialNumber Set end)
            }
        }
        
        /// <summary>
        /// Время создания объекта.
        /// </summary>
        //  *** Start programmer edit section *** (ComputerPart.CreateTime CustomAttributes)

        //  *** End programmer edit section *** (ComputerPart.CreateTime CustomAttributes)
        public virtual System.Nullable<System.DateTime> CreateTime
        {
            get
            {
                //  *** Start programmer edit section *** (ComputerPart.CreateTime Get start)

                //  *** End programmer edit section *** (ComputerPart.CreateTime Get start)
                System.Nullable<System.DateTime> result = this.fCreateTime;
                //  *** Start programmer edit section *** (ComputerPart.CreateTime Get end)

                //  *** End programmer edit section *** (ComputerPart.CreateTime Get end)
                return result;
            }
            set
            {
                //  *** Start programmer edit section *** (ComputerPart.CreateTime Set start)

                //  *** End programmer edit section *** (ComputerPart.CreateTime Set start)
                this.fCreateTime = value;
                //  *** Start programmer edit section *** (ComputerPart.CreateTime Set end)

                //  *** End programmer edit section *** (ComputerPart.CreateTime Set end)
            }
        }
        
        /// <summary>
        /// Создатель объекта.
        /// </summary>
        //  *** Start programmer edit section *** (ComputerPart.Creator CustomAttributes)

        //  *** End programmer edit section *** (ComputerPart.Creator CustomAttributes)
        [StrLen(255)]
        public virtual string Creator
        {
            get
            {
                //  *** Start programmer edit section *** (ComputerPart.Creator Get start)

                //  *** End programmer edit section *** (ComputerPart.Creator Get start)
                string result = this.fCreator;
                //  *** Start programmer edit section *** (ComputerPart.Creator Get end)

                //  *** End programmer edit section *** (ComputerPart.Creator Get end)
                return result;
            }
            set
            {
                //  *** Start programmer edit section *** (ComputerPart.Creator Set start)

                //  *** End programmer edit section *** (ComputerPart.Creator Set start)
                this.fCreator = value;
                //  *** Start programmer edit section *** (ComputerPart.Creator Set end)

                //  *** End programmer edit section *** (ComputerPart.Creator Set end)
            }
        }
        
        /// <summary>
        /// Время последнего редактирования объекта.
        /// </summary>
        //  *** Start programmer edit section *** (ComputerPart.EditTime CustomAttributes)

        //  *** End programmer edit section *** (ComputerPart.EditTime CustomAttributes)
        public virtual System.Nullable<System.DateTime> EditTime
        {
            get
            {
                //  *** Start programmer edit section *** (ComputerPart.EditTime Get start)

                //  *** End programmer edit section *** (ComputerPart.EditTime Get start)
                System.Nullable<System.DateTime> result = this.fEditTime;
                //  *** Start programmer edit section *** (ComputerPart.EditTime Get end)

                //  *** End programmer edit section *** (ComputerPart.EditTime Get end)
                return result;
            }
            set
            {
                //  *** Start programmer edit section *** (ComputerPart.EditTime Set start)

                //  *** End programmer edit section *** (ComputerPart.EditTime Set start)
                this.fEditTime = value;
                //  *** Start programmer edit section *** (ComputerPart.EditTime Set end)

                //  *** End programmer edit section *** (ComputerPart.EditTime Set end)
            }
        }
        
        /// <summary>
        /// Последний редактор объекта.
        /// </summary>
        //  *** Start programmer edit section *** (ComputerPart.Editor CustomAttributes)

        //  *** End programmer edit section *** (ComputerPart.Editor CustomAttributes)
        [StrLen(255)]
        public virtual string Editor
        {
            get
            {
                //  *** Start programmer edit section *** (ComputerPart.Editor Get start)

                //  *** End programmer edit section *** (ComputerPart.Editor Get start)
                string result = this.fEditor;
                //  *** Start programmer edit section *** (ComputerPart.Editor Get end)

                //  *** End programmer edit section *** (ComputerPart.Editor Get end)
                return result;
            }
            set
            {
                //  *** Start programmer edit section *** (ComputerPart.Editor Set start)

                //  *** End programmer edit section *** (ComputerPart.Editor Set start)
                this.fEditor = value;
                //  *** Start programmer edit section *** (ComputerPart.Editor Set end)

                //  *** End programmer edit section *** (ComputerPart.Editor Set end)
            }
        }
        
        /// <summary>
        /// Computer part.
        /// </summary>
        //  *** Start programmer edit section *** (ComputerPart.Type CustomAttributes)

        //  *** End programmer edit section *** (ComputerPart.Type CustomAttributes)
        [PropertyStorage(new string[] {
                "Type"})]
        public virtual IIS.MyTestApplicationEmber.Type Type
        {
            get
            {
                //  *** Start programmer edit section *** (ComputerPart.Type Get start)

                //  *** End programmer edit section *** (ComputerPart.Type Get start)
                IIS.MyTestApplicationEmber.Type result = this.fType;
                //  *** Start programmer edit section *** (ComputerPart.Type Get end)

                //  *** End programmer edit section *** (ComputerPart.Type Get end)
                return result;
            }
            set
            {
                //  *** Start programmer edit section *** (ComputerPart.Type Set start)

                //  *** End programmer edit section *** (ComputerPart.Type Set start)
                this.fType = value;
                //  *** Start programmer edit section *** (ComputerPart.Type Set end)

                //  *** End programmer edit section *** (ComputerPart.Type Set end)
            }
        }
        
        /// <summary>
        /// мастеровая ссылка на шапку IIS.MyTestApplicationEmber.Computer.
        /// </summary>
        //  *** Start programmer edit section *** (ComputerPart.Computer CustomAttributes)

        //  *** End programmer edit section *** (ComputerPart.Computer CustomAttributes)
        [Agregator()]
        [NotNull()]
        [PropertyStorage(new string[] {
                "Computer"})]
        public virtual IIS.MyTestApplicationEmber.Computer Computer
        {
            get
            {
                //  *** Start programmer edit section *** (ComputerPart.Computer Get start)

                //  *** End programmer edit section *** (ComputerPart.Computer Get start)
                IIS.MyTestApplicationEmber.Computer result = this.fComputer;
                //  *** Start programmer edit section *** (ComputerPart.Computer Get end)

                //  *** End programmer edit section *** (ComputerPart.Computer Get end)
                return result;
            }
            set
            {
                //  *** Start programmer edit section *** (ComputerPart.Computer Set start)

                //  *** End programmer edit section *** (ComputerPart.Computer Set start)
                this.fComputer = value;
                //  *** Start programmer edit section *** (ComputerPart.Computer Set end)

                //  *** End programmer edit section *** (ComputerPart.Computer Set end)
            }
        }
        
        /// <summary>
        /// Class views container.
        /// </summary>
        public class Views
        {
            
            /// <summary>
            /// "AuditView" view.
            /// </summary>
            public static ICSSoft.STORMNET.View AuditView
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("AuditView", typeof(IIS.MyTestApplicationEmber.ComputerPart));
                }
            }
            
            /// <summary>
            /// "ComputerPartE" view.
            /// </summary>
            public static ICSSoft.STORMNET.View ComputerPartE
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("ComputerPartE", typeof(IIS.MyTestApplicationEmber.ComputerPart));
                }
            }
        }
        
        /// <summary>
        /// Audit class settings.
        /// </summary>
        public class AuditSettings
        {
            
            /// <summary>
            /// Включён ли аудит для класса.
            /// </summary>
            public static bool AuditEnabled = true;
            
            /// <summary>
            /// Использовать имя представления для аудита по умолчанию.
            /// </summary>
            public static bool UseDefaultView = false;
            
            /// <summary>
            /// Включён ли аудит операции чтения.
            /// </summary>
            public static bool SelectAudit = false;
            
            /// <summary>
            /// Имя представления для аудирования операции чтения.
            /// </summary>
            public static string SelectAuditViewName = "AuditView";
            
            /// <summary>
            /// Включён ли аудит операции создания.
            /// </summary>
            public static bool InsertAudit = true;
            
            /// <summary>
            /// Имя представления для аудирования операции создания.
            /// </summary>
            public static string InsertAuditViewName = "AuditView";
            
            /// <summary>
            /// Включён ли аудит операции изменения.
            /// </summary>
            public static bool UpdateAudit = false;
            
            /// <summary>
            /// Имя представления для аудирования операции изменения.
            /// </summary>
            public static string UpdateAuditViewName = "AuditView";
            
            /// <summary>
            /// Включён ли аудит операции удаления.
            /// </summary>
            public static bool DeleteAudit = true;
            
            /// <summary>
            /// Имя представления для аудирования операции удаления.
            /// </summary>
            public static string DeleteAuditViewName = "AuditView";
            
            /// <summary>
            /// Путь к форме просмотра результатов аудита.
            /// </summary>
            public static string FormUrl = "";
            
            /// <summary>
            /// Режим записи данных аудита (синхронный или асинхронный).
            /// </summary>
            public static ICSSoft.STORMNET.Business.Audit.Objects.tWriteMode WriteMode = ICSSoft.STORMNET.Business.Audit.Objects.tWriteMode.Synchronous;
            
            /// <summary>
            /// Максимальная длина сохраняемого значения поля (если 0, то строка обрезаться не будет).
            /// </summary>
            public static int PrunningLength = 0;
            
            /// <summary>
            /// Показывать ли пользователям в изменениях первичные ключи.
            /// </summary>
            public static bool ShowPrimaryKey = false;
            
            /// <summary>
            /// Сохранять ли старое значение.
            /// </summary>
            public static bool KeepOldValue = true;
            
            /// <summary>
            /// Сжимать ли сохраняемые значения.
            /// </summary>
            public static bool Compress = false;
            
            /// <summary>
            /// Сохранять ли все значения атрибутов, а не только изменяемые.
            /// </summary>
            public static bool KeepAllValues = false;
        }
    }
    
    /// <summary>
    /// Detail array of ComputerPart.
    /// </summary>
    //  *** Start programmer edit section *** (DetailArrayDetailArrayOfComputerPart CustomAttributes)

    //  *** End programmer edit section *** (DetailArrayDetailArrayOfComputerPart CustomAttributes)
    public class DetailArrayOfComputerPart : ICSSoft.STORMNET.DetailArray
    {
        
        //  *** Start programmer edit section *** (IIS.MyTestApplicationEmber.DetailArrayOfComputerPart members)

        //  *** End programmer edit section *** (IIS.MyTestApplicationEmber.DetailArrayOfComputerPart members)

        
        /// <summary>
        /// Construct detail array.
        /// </summary>
        /// <summary>
        /// Returns object with type ComputerPart by index.
        /// </summary>
        /// <summary>
        /// Adds object with type ComputerPart.
        /// </summary>
        public DetailArrayOfComputerPart(IIS.MyTestApplicationEmber.Computer fComputer) : 
                base(typeof(ComputerPart), ((ICSSoft.STORMNET.DataObject)(fComputer)))
        {
        }
        
        public IIS.MyTestApplicationEmber.ComputerPart this[int index]
        {
            get
            {
                return ((IIS.MyTestApplicationEmber.ComputerPart)(this.ItemByIndex(index)));
            }
        }
        
        public virtual void Add(IIS.MyTestApplicationEmber.ComputerPart dataobject)
        {
            this.AddObject(((ICSSoft.STORMNET.DataObject)(dataobject)));
        }
    }
}
